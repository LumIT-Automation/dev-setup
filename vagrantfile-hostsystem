  ############################################################################################
  # Hostsystem: Log collector, smtp
  ############################################################################################

  config.vm.define :hostsystem do |hostsystem|
    hostsystem.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "512"
      vb.cpus = 1
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    hostsystem.vm.provider "libvirt" do |libvrt|
      libvrt.memory = "512"
      libvrt.cpus = 1
    end

    # OS.

    hostsystem.vm.box = "debian/bookworm64"

    # Network.
    hostsystem.vm.network :private_network, ip: "10.0.111.253"
    hostsystem.vm.hostname = "hostsystem"

    # Synced folders.
    if OS.linux?
      hostsystem.vm.synced_folder "../log", "/var/syslog-ng", type: "nfs", nfs_version: 4
      hostsystem.vm.synced_folder "../smtp", "/var/smtp", type: "nfs", nfs_version: 4
    end
    if OS.mac?
      hostsystem.vm.synced_folder "../log", "/var/syslog-ng", type: "nfs", nfs_udp: false
      hostsystem.vm.synced_folder "../smtp", "/var/smtp", type: "nfs", nfs_udp: false
    end
    if OS.windows?
      hostsystem.vm.synced_folder "../log", "/var/syslog-ng", type: "smb"
      hostsystem.vm.synced_folder "../smtp", "/var/smtp", type: "smb"
    end

    # Alternative debian mirror.
    if File.exist?("hostsystem/sources.list")
      hostsystem.vm.provision "file", source: "hostsystem/sources.list", destination: "/tmp/sources.list"
    end

    # Copy syslog-ng config files from container repos.
    if File.exist?("../api-f5/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../api-f5/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/api-f5_syslog-ng"
    end
    if File.exist?("../api-infoblox/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../api-infoblox/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/api-infoblox_syslog-ng"
    end
    if File.exist?("../api-fortinetdb/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../api-fortinetdb/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/api-fortinetdb_syslog-ng"
    end
    if File.exist?("../api-vmware/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../api-vmware/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/api-vmware_syslog-ng"
    end
    if File.exist?("../aaa/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../aaa/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/sso_syslog-ng"
    end
    if File.exist?("../dns/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../dns/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/dns_syslog-ng"
    end
    if File.exist?("../revp/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../revp/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/revp_syslog-ng"
    end
    if File.exist?("../ui-backend/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../ui-backend/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/uib_syslog-ng"
    end
    if File.exist?("../ui-frontend-ng/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d")
      hostsystem.vm.provision "file", source: "../ui-frontend-ng/CONTAINER-DEBIAN-PKG/etc/syslog-ng/conf.d", destination: "/tmp/uif_syslog-ng"
    end

    # SMTP config variables.
    if File.exist?(".env")
      hostsystem.vm.provision "file", source: ".env", destination: "/tmp/smtp-vars.conf"
    end

    # Provision.
    hostsystem.vm.provision "shell" do |s|
      s.path = "hostsystem/bootstrap.sh"
      s.args = ["--action", "install"]
    end
  end

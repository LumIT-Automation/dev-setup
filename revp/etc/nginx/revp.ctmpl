# Reverse proxy will resolve services' fqdns using the consul-template service - see /etc/consul.d/revp.consul-template.hcl.
# When a change in the Consul catalog is detected, the consul-template service rewrites the revp site with this template.

upstream uif {
{{ range service "ui-frontend" }}
  server {{ .Address }}:{{ .Port }};
{{ end }}
  server 127.0.0.1:9981 down;
}

upstream sso {
{{ range service "sso" }}
  server {{ .Address }}:{{ .Port }};
{{ end }}
  server 127.0.0.1:9982 down;
}

upstream uib {
{{ range service "ui-backend" }}
  server {{ .Address }}:{{ .Port }};
{{ end }}
  server 127.0.0.1:9983 down;
}

server {
  listen 80;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate /etc/nginx/tls/cert.crt;
  ssl_certificate_key /etc/nginx/tls/cert.key;

  # ssl on;
  ssl_session_cache builtin:1000 shared:SSL:10m;
  ssl_protocols TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  ssl_prefer_server_ciphers on;

  location / {
    proxy_pass http://uif;
  }

  location /auth {
    rewrite /auth/(.*) /$1 break;
    proxy_pass http://sso;
    proxy_read_timeout 30;
  }

  location /backend {
    proxy_pass http://uib;
    proxy_connect_timeout 300;
    proxy_read_timeout 300;
  }

  index index.html index.htm index.nginx-debian.html;
  server_name _;
}
